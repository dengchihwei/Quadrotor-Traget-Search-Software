#ifndef ACTUATORSETTINGS_H
#define ACTUATORSETTINGS_H
#include "common.h"
#define ACTUATORSETTINGS_CHANNELUPDATEFREQ_NUMELEM 6
#define ACTUATORSETTINGS_CHANNELMAX_NUMELEM 10
#define ACTUATORSETTINGS_CHANNELNEUTRAL_NUMELEM 10
#define ACTUATORSETTINGS_CHANNELMIN_NUMELEM 10
#define ACTUATORSETTINGS_CHANNELTYPE_NUMELEM 10
#define ACTUATORSETTINGS_CHANNELADDR_NUMELEM 10
struct ActuatorSettingsData
{
    uint16 ChannelUpdateFreq[ACTUATORSETTINGS_CHANNELUPDATEFREQ_NUMELEM];
    int16 ChannelMax[ACTUATORSETTINGS_CHANNELMAX_NUMELEM];
    int16 ChannelNeutral[ACTUATORSETTINGS_CHANNELNEUTRAL_NUMELEM];
    int16 ChannelMin[ACTUATORSETTINGS_CHANNELMIN_NUMELEM];
    enum ChannelType
    {
        ACTUATORSETTINGS_CHANNELTYPE_PWM,
        ACTUATORSETTINGS_CHANNELTYPE_MK,
        ACTUATORSETTINGS_CHANNELTYPE_ASTEC4,
        ACTUATORSETTINGS_CHANNELTYPE_PWMALARMBUZZER,
        ACTUATORSETTINGS_CHANNELTYPE_ARMINGLED,
        ACTUATORSETTINGS_CHANNELTYPE_INFOLED
    }ChannelType[ACTUATORSETTINGS_CHANNELTYPE_NUMELEM];
    uint8 ChannelAddr[ACTUATORSETTINGS_CHANNELADDR_NUMELEM];
    enum MotorsSpinWhileArmed
    {
        ACTUATORSETTINGS_MOTORSSPINWHILEARMED_FALSE,
        ACTUATORSETTINGS_MOTORSSPINWHILEARMED_TRUE
    }MotorsSpinWhileArmed;
};
typedef struct ActuatorSettingsData ActuatorSettingsData;
#endif // ACTUATORSETTINGS_H
